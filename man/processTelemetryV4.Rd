% Generated by roxygen2 (4.0.2): do not edit by hand
\name{processTelemetryV4}
\alias{processTelemetryV4}
\title{Will return environments that refer to heka messages}
\usage{
processTelemetryV4(conn, streaming = FALSE, json = FALSE, ...)
}
\arguments{
\item{conn}{can be a filename or a raw array}

\item{streaming}{defaults to FALSE and can be used as an iterator}
}
\value{
depends on the streaming argument
}
\description{
Will return environments that refer to heka messages
}
\details{
when given a raw array (e.g. you read the heka file into
memory) then this function returns an environment and attributes
\code{nread} and \code{mbytes} which are the number of messages
read and total messages bytes read. When the \code{conn} is
filename and \code{streaming} is \code{FALSE}, it will return the
same environment with an additional attribute \code{growth} which
is the number of times the memory buffer was resized (not important
). When \code{streaming} is \code{TRUE} a function is
returned. This function takes a single argument \code{n} which is
the number of messages to return(default is 1). You call this
function which will return environments like above and null when
nothing can be read anymore. Also the attributes to the environment
correspond to cumulative bytes and messages read. The additional
attribute is \code{n} which corresponds to the number of messages
read in the invocation.
}
\examples{
\dontrun{
f <- "./20150511234003.859_ip-172-31-14-40" # a file with heka frames
r1 <- processTelemetryV4(conn=f)

r1 <- processTelemetryV4(conn=f,streaming=TRUE)
while(TRUE){
 frames <- r1()
 if(is.null(frames)) break
}

# 2nd method , reading in directly
w <- readBin(normalizePath(f), what='raw',n=as.numeric(file.info(normalizePath(f))['size']))
r2 <- processTelemetryV4(conn=w)

}
}

